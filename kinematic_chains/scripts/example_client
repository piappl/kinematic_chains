#!/usr/bin/env python

from kinematic_chains.srv import *
import rospy
from geometry_msgs.msg import Pose, Quaternion
from tf.transformations import quaternion_from_euler
from sensor_msgs.msg import Joy
import tf

def requestIK(goal):
    rospy.logwarn("Sending IK request") 
    rospy.wait_for_service('calculateIK')
    try:
        calculate = rospy.ServiceProxy('calculateIK', CalculateIK)
        joints = calculate(goal)  
        rospy.loginfo("\033[1;92mRESPONSE: \033[0m")
        rospy.loginfo(joints.jntCoordinates.name)
        rospy.loginfo(joints.jntCoordinates.position)
        return joints
    except rospy.ServiceException, e:
        rospy.logerr(e)

def joy_callback(data):

    goal = Pose()
    goal.position.x = data.axes[0]
    goal.position.y = data.axes[1]
    goal.position.z = data.axes[2]
    eulerx = data.axes[3]
    eulery = data.axes[4]
    eulerz = data.axes[5]

    q_angle = quaternion_from_euler(eulerx, eulery, eulerz, axes='sxyz')
    goal.orientation = Quaternion(*q_angle)

    br = tf.TransformBroadcaster()
    br.sendTransform((goal.position.x, goal.position.y, goal.position.z),
                                            q_angle,
                                            rospy.Time.now(),
                                            "goal",
                                            "base_link")
    rospy.loginfo("goal pose: x:%.1f, y:%.1f, z:%.1f, angles: x:%.1f, y:%.1f, z:%.1f" % (goal.position.x, goal.position.y, goal.position.z,
                                                                         eulerx, eulery, eulerz) )
    bnumber = 4                           
    if data.buttons[bnumber]:
        requestIK(goal)
    else:
        rospy.logwarn("\033[1;91mto request IK, press joy %d\033[0m" % bnumber) 

if __name__ == "__main__":
    rospy.loginfo("node initialization")
    rospy.init_node('example_ik_client')
    rospy.loginfo("joy callback initialization")
    rospy.Subscriber("joy", Joy, joy_callback, queue_size=1)
    rospy.loginfo("rospy spin")
    rospy.spin()
    #while not rospy.is_shutdown(): 
        
